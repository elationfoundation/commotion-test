============================
Dependencies:
============================
* Python 2.6-7

============================
How to run tests:
=============================
python run_tests.py [flags]


============================
Flags:
============================
-s [option]
Suite:This flag chooses a specific test suite. Currently only "all" is implemented

-v [level]
Verbose: This flag sets the verbosity level to 2. This will show passed tests in the log file. Otherwise only failed tests and standard metric output is shown in the logfiles.

-l [name]
LogFile: This flag will allow you to choose a non-standard logfile name.


============================
Config File:
============================
should be in the location:
commotion-test/config
should have the following format:
node=123.546.789.10
server=867.530.9.0
server=777.777.777.777
node=666.666.666.666


=============================
To Create a new test set: Copy this bare unittest into your code and go from there.
============================

import unittest
import os, time  #setUp and tearDown requirements

class testFunctions(unittest.TestCase):

    def setUp(self):
	num = 1
        date_string = time.strftime("%Y-%m-%d")
	metric_dir = "logs/"+date_string+"("+str(num)+")"
	while os.path.isdir("logs/"+date_string+"("+str(num+1)+")"):
            num += 1
            metric_dir = "logs/"+date_string+"("+str(num)+")"
        self.log = open(metric_dir+"/THIS_IS_THE_METRIC_FILE_NAME_YOU_WANT", "a")

    def tearDown(self):
        self.log.close()

    def test_A_thing(self):

    self.log.write("This is how you write to the metrics file")
	#Note: Don't write any unittest assertions that may fail with one, but not all devices. Run your assertion tests after getting the metric data from your nodes so that a failure does not halt the metric gathering. 
